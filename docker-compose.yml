version: "3.3"

services:
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5020:80"
    networks:
      - evaluation-network

  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - evaluation-network

  ambev.developerevaluation.nosql:
    container_name: ambev_developer_evaluation_nosql
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - evaluation-network

  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - evaluation-network

  api-gateway:
    container_name: ambev_developer_evaluation_gateway
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.ApiGateway/Dockerfile
    ports:
      - "5010:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    networks:
      - evaluation-network

networks:
  evaluation-network:
    external: true
